name: Java CI with Maven

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Define the environment
jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the code from the repository

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Set up JDK 17
          distribution: 'temurin'  # Use Temurin for JDK 17 (AdoptOpenJDK's successor)

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests=true  # Skipping tests here as we will run them separately in the next step

      - name: Run tests
        run: mvn test  # This will run the unit tests

      - name: Upload test results
        if: always()  # Ensure this step runs even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-classes  # Path to test results (can be changed if necessary)

      - name: Collect test results
        if: always()
        run: |
          if [ -d target/test-classes ]; then
            echo "Test results found!"
          else
            echo "No test results found."
          fi
